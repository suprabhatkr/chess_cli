package chess_cli.ChessPieces;

import chess_cli.ChessBoardCli;
import java.util.ArrayList;

public class KnightCli extends ChessPieceCli {
	public KnightCli(ChessBoardCli chessBoard, boolean color, int row, int column) {
		super(chessBoard, color, row, column);
		this.name = "knight";
	}
	
	@Override
    public ArrayList<PositionCli> getValidMoves() {
		ArrayList<PositionCli> validMoves = new ArrayList<PositionCli>();
        int[][] offsets = {{2,1}, {1,2}, {-1,2}, {-2,1}, {-2,-1}, {-1,-2}, {1,-2}, {2,-1}};
        for (int[] offset : offsets) {
            int newRow = this.position.getRow() + offset[0];
            int newColumn = this.position.getColumn() + offset[1];
            if (newRow >= 0 && newRow < 8 && newColumn >= 0 && newColumn < 8 &&
                    (chessBoard.getChessSquare(newRow, newColumn).isEmpty() || 
                    		chessBoard.getChessSquare(newRow, newColumn).getChessPiece().isGold() == this.isSilver())) {
            	validMoves.add(new PositionCli(newRow, newColumn));
            }
        }
        return validMoves;
    }
}
